version: '3.8'

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

services:
  database:
    container_name: ticketer-database
    image: mariadb:11
    restart: always
    healthcheck:
      test: ['CMD', 'healthcheck.sh', '--connect', '--innodb_initialized']
      interval: 10s
      retries: 3
      start_period: 10s
    environment:
      - MARIADB_RANDOM_ROOT_PASSWORD=true

  # Sharding will take place in one container as it is not possible to use discord.js' ShardingManager
  # to orchestrate/utilise one container per shard (that I know of). It would create another manager in that container which
  # is not the effect we are going for. It seems like vertical scaling is currently the way to go.
  bot:
    container_name: ticketer-bot
    build:
      context: .
      dockerfile: ./apps/bot/Dockerfile
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
