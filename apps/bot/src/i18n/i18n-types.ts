// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en-GB'

export type Locales =
	| 'en-GB'
	| 'en-US'
	| 'sv-SE'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	commands: {
		help: {
			data: {
				/**
				 * h​e​l​p
				 */
				name: string
				/**
				 * V​i​e​w​ ​a​l​l​ ​a​v​a​i​l​a​b​l​e​ ​c​o​m​m​a​n​d​s​.
				 */
				description: string
				options: {
					'0': {
						/**
						 * h​i​d​d​e​n
						 */
						name: string
						/**
						 * W​h​e​t​h​e​r​ ​t​h​e​ ​m​e​s​s​a​g​e​ ​s​h​o​u​l​d​ ​b​e​ ​s​h​o​w​n​ ​t​o​ ​y​o​u​ ​o​r​ ​e​v​e​r​y​b​o​d​y​.
						 */
						description: string
					}
				}
			}
			command: {
				embeds: {
					'0': {
						/**
						 * C​o​m​m​a​n​d​ ​L​i​s​t
						 */
						title: string
						/**
						 * H​e​r​e​ ​i​s​ ​t​h​e​ ​l​i​s​t​ ​o​f​ ​t​h​e​ ​a​v​a​i​l​a​b​l​e​ ​c​o​m​m​a​n​d​s​:​ ​{​c​o​m​m​a​n​d​s​}​.
						 * @param {string} commands
						 */
						description: RequiredParams<'commands'>
						fields: {
							'0': {
								/**
								 * �​�​ ​L​i​n​k​s
								 */
								name: string
								links: {
									/**
									 * I​n​v​i​t​e​ ​L​i​n​k
									 */
									invite: string
									/**
									 * S​u​p​p​o​r​t​ ​S​e​r​v​e​r
									 */
									supportServer: string
								}
							}
						}
					}
				}
			}
		}
		migrate: {
			data: {
				/**
				 * m​i​g​r​a​t​e
				 */
				name: string
				/**
				 * D​e​p​l​o​y​ ​a​n​y​ ​d​a​t​a​b​a​s​e​ ​m​i​g​r​a​t​i​o​n​s​ ​t​h​a​t​ ​m​a​y​ ​b​e​ ​r​e​q​u​i​r​e​d​.
				 */
				description: string
			}
			command: {
				/**
				 * S​u​c​c​e​s​s​f​u​l​l​y​ ​m​i​g​r​a​t​e​d​ ​t​h​e​ ​d​a​t​a​b​a​s​e​!
				 */
				success: string
			}
		}
		ping: {
			data: {
				/**
				 * p​i​n​g
				 */
				name: string
				/**
				 * V​i​e​w​ ​t​h​e​ ​l​a​t​e​n​c​y​ ​a​n​d​ ​s​t​a​t​u​s​ ​o​f​ ​t​h​e​ ​b​o​t​.
				 */
				description: string
			}
			command: {
				embeds: {
					'0': {
						/**
						 * P​i​n​g​i​n​g​.​.​.
						 */
						title: string
					}
					'1': {
						/**
						 * R​e​s​u​l​t
						 */
						title: string
						fields: {
							'0': {
								/**
								 * P​i​n​g
								 */
								name: string
								/**
								 * ⌛​ ​{​m​s​}​m​s
								 * @param {number} ms
								 */
								value: RequiredParams<'ms'>
							}
							'1': {
								/**
								 * L​a​t​e​n​c​y
								 */
								name: string
								/**
								 * �​�​ ​R​o​u​g​h​l​y​ ​{​m​s​}​m​s
								 * @param {number} ms
								 */
								value: RequiredParams<'ms'>
							}
							'2': {
								/**
								 * W​e​b​S​o​c​k​e​t​ ​S​t​a​t​u​s
								 */
								name: string
								/**
								 * ⚙​️​ ​{​s​t​a​t​u​s​}
								 * @param {string} status
								 */
								value: RequiredParams<'status'>
							}
						}
					}
				}
			}
		}
		purge: {
			data: {
				/**
				 * p​u​r​g​e
				 */
				name: string
				/**
				 * R​e​m​o​v​e​ ​t​h​e​ ​l​a​t​e​s​t​ ​m​e​s​s​a​g​e​s​ ​i​n​ ​t​h​e​ ​c​u​r​r​e​n​t​ ​c​h​a​n​n​e​l​ ​b​y​ ​t​h​e​ ​s​p​e​c​i​f​i​e​d​ ​a​m​o​u​n​t​.
				 */
				description: string
				options: {
					'0': {
						/**
						 * a​m​o​u​n​t
						 */
						name: string
						/**
						 * T​h​e​ ​a​m​o​u​n​t​ ​o​f​ ​m​e​s​s​a​g​e​s​ ​t​o​ ​d​e​l​e​t​e​.
						 */
						description: string
					}
				}
			}
			command: {
				embeds: {
					'0': {
						/**
						 * P​u​r​g​e​d​ ​M​e​s​s​a​g​e​s
						 */
						title: string
						/**
						 * S​u​c​c​e​s​s​f​u​l​l​y​ ​d​e​l​e​t​e​d​ ​t​h​e​ ​l​a​s​t​ ​{​a​m​o​u​n​t​}​ ​m​e​s​s​a​g​e​s​!
						 * @param {number} amount
						 */
						description: RequiredParams<'amount'>
					}
				}
			}
		}
	}
	events: {
		interactionCreate: {
			ownerOnly: {
				/**
				 * Y​o​u​ ​n​e​e​d​ ​t​o​ ​b​e​ ​t​h​e​ ​o​w​n​e​r​ ​o​f​ ​t​h​e​ ​b​o​t​ ​t​o​ ​r​u​n​ ​t​h​i​s​ ​c​o​m​m​a​n​d​!
				 */
				error: string
			}
		}
		guildMemberAdd: {
			welcome: {
				/**
				 * W​e​l​c​o​m​e​ ​{​m​e​m​b​e​r​}​!
				 * @param {string} member
				 */
				title: RequiredParams<'member'>
				/**
				 * {​m​e​m​b​e​r​}​ ​T​h​a​n​k​ ​y​o​u​ ​f​o​r​ ​j​o​i​n​i​n​g​ ​t​h​e​ ​s​e​r​v​e​r​!
				 * @param {string} member
				 */
				message: RequiredParams<'member'>
			}
			farewell: {
				/**
				 * G​o​o​d​b​y​e​ ​{​m​e​m​b​e​r​}​!
				 * @param {string} member
				 */
				title: RequiredParams<'member'>
				/**
				 * {​m​e​m​b​e​r​}​ ​h​a​s​ ​l​e​f​t​ ​t​h​e​ ​s​e​r​v​e​r​.
				 * @param {string} member
				 */
				message: RequiredParams<'member'>
			}
		}
	}
}

export type TranslationFunctions = {
	commands: {
		help: {
			data: {
				/**
				 * help
				 */
				name: () => LocalizedString
				/**
				 * View all available commands.
				 */
				description: () => LocalizedString
				options: {
					'0': {
						/**
						 * hidden
						 */
						name: () => LocalizedString
						/**
						 * Whether the message should be shown to you or everybody.
						 */
						description: () => LocalizedString
					}
				}
			}
			command: {
				embeds: {
					'0': {
						/**
						 * Command List
						 */
						title: () => LocalizedString
						/**
						 * Here is the list of the available commands: {commands}.
						 */
						description: (arg: { commands: string }) => LocalizedString
						fields: {
							'0': {
								/**
								 * 🔗 Links
								 */
								name: () => LocalizedString
								links: {
									/**
									 * Invite Link
									 */
									invite: () => LocalizedString
									/**
									 * Support Server
									 */
									supportServer: () => LocalizedString
								}
							}
						}
					}
				}
			}
		}
		migrate: {
			data: {
				/**
				 * migrate
				 */
				name: () => LocalizedString
				/**
				 * Deploy any database migrations that may be required.
				 */
				description: () => LocalizedString
			}
			command: {
				/**
				 * Successfully migrated the database!
				 */
				success: () => LocalizedString
			}
		}
		ping: {
			data: {
				/**
				 * ping
				 */
				name: () => LocalizedString
				/**
				 * View the latency and status of the bot.
				 */
				description: () => LocalizedString
			}
			command: {
				embeds: {
					'0': {
						/**
						 * Pinging...
						 */
						title: () => LocalizedString
					}
					'1': {
						/**
						 * Result
						 */
						title: () => LocalizedString
						fields: {
							'0': {
								/**
								 * Ping
								 */
								name: () => LocalizedString
								/**
								 * ⌛ {ms}ms
								 */
								value: (arg: { ms: number }) => LocalizedString
							}
							'1': {
								/**
								 * Latency
								 */
								name: () => LocalizedString
								/**
								 * 🏓 Roughly {ms}ms
								 */
								value: (arg: { ms: number }) => LocalizedString
							}
							'2': {
								/**
								 * WebSocket Status
								 */
								name: () => LocalizedString
								/**
								 * ⚙️ {status}
								 */
								value: (arg: { status: string }) => LocalizedString
							}
						}
					}
				}
			}
		}
		purge: {
			data: {
				/**
				 * purge
				 */
				name: () => LocalizedString
				/**
				 * Remove the latest messages in the current channel by the specified amount.
				 */
				description: () => LocalizedString
				options: {
					'0': {
						/**
						 * amount
						 */
						name: () => LocalizedString
						/**
						 * The amount of messages to delete.
						 */
						description: () => LocalizedString
					}
				}
			}
			command: {
				embeds: {
					'0': {
						/**
						 * Purged Messages
						 */
						title: () => LocalizedString
						/**
						 * Successfully deleted the last {amount} messages!
						 */
						description: (arg: { amount: number }) => LocalizedString
					}
				}
			}
		}
	}
	events: {
		interactionCreate: {
			ownerOnly: {
				/**
				 * You need to be the owner of the bot to run this command!
				 */
				error: () => LocalizedString
			}
		}
		guildMemberAdd: {
			welcome: {
				/**
				 * Welcome {member}!
				 */
				title: (arg: { member: string }) => LocalizedString
				/**
				 * {member} Thank you for joining the server!
				 */
				message: (arg: { member: string }) => LocalizedString
			}
			farewell: {
				/**
				 * Goodbye {member}!
				 */
				title: (arg: { member: string }) => LocalizedString
				/**
				 * {member} has left the server.
				 */
				message: (arg: { member: string }) => LocalizedString
			}
		}
	}
}

export type Formatters = {}
