// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en-GB'

export type Locales =
	| 'en-GB'
	| 'en-US'
	| 'sv-SE'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	commands: {
		help: {
			data: {
				/**
				 * h​e​l​p
				 */
				name: string
				/**
				 * V​i​e​w​ ​a​l​l​ ​a​v​a​i​l​a​b​l​e​ ​c​o​m​m​a​n​d​s​.
				 */
				description: string
				options: {
					'0': {
						/**
						 * h​i​d​d​e​n
						 */
						name: string
						/**
						 * W​h​e​t​h​e​r​ ​t​h​e​ ​m​e​s​s​a​g​e​ ​s​h​o​u​l​d​ ​b​e​ ​s​h​o​w​n​ ​t​o​ ​y​o​u​ ​o​r​ ​e​v​e​r​y​b​o​d​y​.
						 */
						description: string
					}
				}
			}
			command: {
				embeds: {
					'0': {
						/**
						 * C​o​m​m​a​n​d​ ​L​i​s​t
						 */
						title: string
						/**
						 * H​e​r​e​ ​i​s​ ​t​h​e​ ​l​i​s​t​ ​o​f​ ​t​h​e​ ​a​v​a​i​l​a​b​l​e​ ​c​o​m​m​a​n​d​s​:​ ​{​c​o​m​m​a​n​d​s​}​.
						 * @param {string} commands
						 */
						description: RequiredParams<'commands'>
						fields: {
							'0': {
								/**
								 * �​�​ ​L​i​n​k​s
								 */
								name: string
								links: {
									/**
									 * I​n​v​i​t​e​ ​L​i​n​k
									 */
									invite: string
									/**
									 * S​u​p​p​o​r​t​ ​S​e​r​v​e​r
									 */
									supportServer: string
								}
							}
						}
					}
				}
			}
		}
		migrate: {
			data: {
				/**
				 * m​i​g​r​a​t​e
				 */
				name: string
				/**
				 * D​e​p​l​o​y​ ​a​n​y​ ​d​a​t​a​b​a​s​e​ ​m​i​g​r​a​t​i​o​n​s​ ​t​h​a​t​ ​m​a​y​ ​b​e​ ​r​e​q​u​i​r​e​d​.
				 */
				description: string
			}
			command: {
				/**
				 * S​u​c​c​e​s​s​f​u​l​l​y​ ​m​i​g​r​a​t​e​d​ ​t​h​e​ ​d​a​t​a​b​a​s​e​!
				 */
				success: string
			}
		}
		ping: {
			data: {
				/**
				 * p​i​n​g
				 */
				name: string
				/**
				 * V​i​e​w​ ​t​h​e​ ​l​a​t​e​n​c​y​ ​a​n​d​ ​s​t​a​t​u​s​ ​o​f​ ​t​h​e​ ​b​o​t​.
				 */
				description: string
			}
			command: {
				embeds: {
					'0': {
						/**
						 * P​i​n​g​i​n​g​.​.​.
						 */
						title: string
					}
					'1': {
						/**
						 * R​e​s​u​l​t
						 */
						title: string
						fields: {
							'0': {
								/**
								 * P​i​n​g
								 */
								name: string
								/**
								 * ⌛​ ​{​m​s​}​m​s
								 * @param {number} ms
								 */
								value: RequiredParams<'ms'>
							}
							'1': {
								/**
								 * L​a​t​e​n​c​y
								 */
								name: string
								/**
								 * �​�​ ​R​o​u​g​h​l​y​ ​{​m​s​}​m​s
								 * @param {number} ms
								 */
								value: RequiredParams<'ms'>
							}
							'2': {
								/**
								 * W​e​b​S​o​c​k​e​t​ ​S​t​a​t​u​s
								 */
								name: string
								/**
								 * ⚙​️​ ​{​s​t​a​t​u​s​}
								 * @param {string} status
								 */
								value: RequiredParams<'status'>
							}
						}
					}
				}
			}
		}
		purge: {
			data: {
				/**
				 * p​u​r​g​e
				 */
				name: string
				/**
				 * R​e​m​o​v​e​ ​t​h​e​ ​l​a​t​e​s​t​ ​m​e​s​s​a​g​e​s​ ​i​n​ ​t​h​e​ ​c​u​r​r​e​n​t​ ​c​h​a​n​n​e​l​ ​b​y​ ​t​h​e​ ​s​p​e​c​i​f​i​e​d​ ​a​m​o​u​n​t​.
				 */
				description: string
				options: {
					'0': {
						/**
						 * a​m​o​u​n​t
						 */
						name: string
						/**
						 * T​h​e​ ​a​m​o​u​n​t​ ​o​f​ ​m​e​s​s​a​g​e​s​ ​t​o​ ​d​e​l​e​t​e​.
						 */
						description: string
					}
				}
			}
			command: {
				embeds: {
					'0': {
						/**
						 * P​u​r​g​e​d​ ​M​e​s​s​a​g​e​s
						 */
						title: string
						/**
						 * S​u​c​c​e​s​s​f​u​l​l​y​ ​d​e​l​e​t​e​d​ ​t​h​e​ ​l​a​s​t​ ​{​a​m​o​u​n​t​}​ ​m​e​s​s​a​g​e​s​!
						 * @param {number} amount
						 */
						description: RequiredParams<'amount'>
					}
				}
			}
		}
		'rename-title': {
			data: {
				/**
				 * r​e​n​a​m​e​-​t​i​t​l​e
				 */
				name: string
				/**
				 * R​e​n​a​m​e​ ​t​h​e​ ​t​i​t​l​e​ ​o​f​ ​t​h​e​ ​t​h​r​e​a​d​ ​s​u​p​p​o​r​t​ ​t​i​c​k​e​t​.
				 */
				description: string
			}
		}
		ticket: {
			data: {
				/**
				 * t​i​c​k​e​t
				 */
				name: string
				/**
				 * C​r​e​a​t​e​ ​a​ ​s​u​p​p​o​r​t​ ​t​i​c​k​e​t​ ​w​i​t​h​i​n​ ​a​ ​c​a​t​e​g​o​r​y​.
				 */
				description: string
			}
		}
	}
	events: {
		interactionCreate: {
			ownerOnly: {
				/**
				 * Y​o​u​ ​n​e​e​d​ ​t​o​ ​b​e​ ​t​h​e​ ​o​w​n​e​r​ ​o​f​ ​t​h​e​ ​b​o​t​ ​t​o​ ​r​u​n​ ​t​h​i​s​ ​c​o​m​m​a​n​d​!
				 */
				error: string
			}
		}
		guildMemberAdd: {
			welcome: {
				/**
				 * W​e​l​c​o​m​e​ ​{​m​e​m​b​e​r​}​!
				 * @param {string} member
				 */
				title: RequiredParams<'member'>
				/**
				 * {​m​e​m​b​e​r​}​ ​T​h​a​n​k​ ​y​o​u​ ​f​o​r​ ​j​o​i​n​i​n​g​ ​t​h​e​ ​s​e​r​v​e​r​!
				 * @param {string} member
				 */
				message: RequiredParams<'member'>
			}
			farewell: {
				/**
				 * G​o​o​d​b​y​e​ ​{​m​e​m​b​e​r​}​!
				 * @param {string} member
				 */
				title: RequiredParams<'member'>
				/**
				 * {​m​e​m​b​e​r​}​ ​h​a​s​ ​l​e​f​t​ ​t​h​e​ ​s​e​r​v​e​r​.
				 * @param {string} member
				 */
				message: RequiredParams<'member'>
			}
		}
	}
	tickets: {
		threads: {
			categories: {
				configuration: {
					openingMessage: {
						/**
						 * {​c​a​t​e​g​o​r​y​}​:​ ​N​e​w​ ​S​u​p​p​o​r​t​ ​T​i​c​k​e​t
						 * @param {string} category
						 */
						title: RequiredParams<'category'>
						/**
						 * {​m​e​m​b​e​r​}​ ​c​r​e​a​t​e​d​ ​a​ ​n​e​w​ ​s​u​p​p​o​r​t​ ​t​i​c​k​e​t​ ​i​n​ ​t​h​e​ ​{​c​a​t​e​g​o​r​y​}​ ​c​a​t​e​g​o​r​y​!
						 * @param {string} category
						 * @param {string} member
						 */
						description: RequiredParams<'category' | 'member'>
					}
				}
				categoryList: {
					/**
					 * S​e​l​e​c​t​ ​a​ ​c​a​t​e​g​o​r​y​ ​t​o​ ​c​r​e​a​t​e​ ​a​ ​t​i​c​k​e​t​ ​w​i​t​h​i​n​.
					 */
					placeholder: string
				}
				createModal: {
					errors: {
						invalidCustomId: {
							/**
							 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
							 */
							title: string
							/**
							 * T​h​e​ ​c​u​s​t​o​m​ ​I​D​ ​c​o​u​l​d​ ​n​o​t​ ​b​e​ ​f​o​u​n​d​.
							 */
							description: string
						}
					}
					title: {
						/**
						 * T​i​t​l​e
						 */
						label: string
						/**
						 * W​r​i​t​e​ ​a​ ​t​i​t​l​e​ ​t​o​ ​b​e​ ​u​s​e​d​ ​i​n​ ​t​h​e​ ​t​i​c​k​e​t​.
						 */
						placeholder: string
					}
					description: {
						/**
						 * D​e​s​c​r​i​p​t​i​o​n
						 */
						label: string
						/**
						 * W​r​i​t​e​ ​a​ ​d​e​s​c​r​i​p​t​i​o​n​ ​t​o​ ​b​e​ ​u​s​e​d​ ​i​n​ ​t​h​e​ ​t​i​c​k​e​t​.
						 */
						placeholder: string
					}
					/**
					 * T​i​c​k​e​t​ ​T​i​t​l​e​ ​&​ ​D​e​s​c​r​i​p​t​i​o​n
					 */
					modalTitle: string
				}
				createTicket: {
					errors: {
						invalidId: {
							/**
							 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
							 */
							title: string
							/**
							 * T​h​e​ ​c​a​t​e​g​o​r​y​ ​I​D​ ​i​s​ ​n​o​t​ ​v​a​l​i​d​.
							 */
							description: string
						}
						noConfiguration: {
							/**
							 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
							 */
							title: string
							/**
							 * T​h​e​ ​g​l​o​b​a​l​ ​o​r​ ​c​a​t​e​g​o​r​y​ ​c​o​n​f​i​g​u​r​a​t​i​o​n​ ​c​o​u​l​d​ ​n​o​t​ ​b​e​ ​f​o​u​n​d​.
							 */
							description: string
						}
						noManagers: {
							/**
							 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
							 */
							title: string
							/**
							 * T​h​e​r​e​ ​a​r​e​ ​n​o​ ​m​a​n​a​g​e​r​s​ ​t​o​ ​a​d​d​ ​t​o​ ​t​h​e​ ​s​u​p​p​o​r​t​ ​t​i​c​k​e​t​.
							 */
							description: string
						}
						invalidChannel: {
							/**
							 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
							 */
							title: string
							/**
							 * T​h​e​ ​t​i​c​k​e​t​ ​c​h​a​n​n​e​l​ ​d​o​e​s​ ​n​o​t​ ​e​x​i​s​t​ ​o​r​ ​i​s​ ​n​o​t​ ​a​ ​t​e​x​t​ ​c​h​a​n​n​e​l​.
							 */
							description: string
						}
						noPermissions: {
							/**
							 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
							 */
							title: string
							/**
							 * I​ ​d​o​n​'​t​ ​h​a​v​e​ ​t​h​e​ ​r​e​q​u​i​r​e​d​ ​p​e​r​m​i​s​s​i​o​n​s​ ​i​n​ ​t​h​e​ ​c​h​a​n​n​e​l​ ​t​o​ ​c​r​e​a​t​e​ ​a​ ​t​i​c​k​e​t​:​ ​{​p​e​r​m​i​s​s​i​o​n​s​}​.
							 * @param {string} permissions
							 */
							description: RequiredParams<'permissions'>
						}
						tooManyTickets: {
							/**
							 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
							 */
							title: string
							/**
							 * Y​o​u​ ​h​a​v​e​ ​t​o​o​ ​m​a​n​y​ ​t​i​c​k​e​t​s​,​ ​y​o​u​ ​m​a​y​ ​n​o​t​ ​h​a​v​e​ ​m​o​r​e​ ​t​h​a​n​ ​{​a​m​o​u​n​t​}​.
							 * @param {number} amount
							 */
							description: RequiredParams<'amount'>
						}
					}
					buttons: {
						_errorIfNotTicketChannel: {
							/**
							 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
							 */
							title: string
							/**
							 * T​h​e​ ​c​h​a​n​n​e​l​ ​i​s​ ​n​o​t​ ​a​ ​v​a​l​i​d​ ​t​i​c​k​e​t​ ​c​h​a​n​n​e​l​.
							 */
							description: string
						}
						_errorIfNotTicketAuthorOrManager: {
							/**
							 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
							 */
							title: string
							/**
							 * Y​o​u​ ​n​e​e​d​ ​t​o​ ​b​e​ ​t​h​e​ ​t​i​c​k​e​t​ ​a​u​t​h​o​r​ ​o​r​ ​m​a​n​a​g​e​r​ ​t​o​ ​e​x​e​c​u​t​e​ ​t​h​i​s​ ​b​u​t​t​o​n​.
							 */
							description: string
						}
						renameTitle: {
							builder: {
								/**
								 * R​e​n​a​m​e​ ​T​i​t​l​e
								 */
								label: string
							}
							component: {
								/**
								 * R​e​n​a​m​e​ ​T​h​r​e​a​d​ ​T​i​t​l​e
								 */
								modalTitle: string
							}
							modal: {
								errors: {
									notEditable: {
										/**
										 * A​n​ ​E​r​r​o​r​ ​O​c​c​u​r​e​d
										 */
										title: string
										/**
										 * I​ ​d​o​ ​n​o​t​ ​h​a​v​e​ ​t​h​e​ ​p​e​r​m​i​s​s​i​o​n​ ​t​o​ ​e​d​i​t​ ​t​h​e​ ​t​i​t​l​e​.
										 */
										description: string
									}
								}
								success: {
									/**
									 * T​i​c​k​e​t​ ​R​e​n​a​m​e​d
									 */
									title: string
									user: {
										/**
										 * T​h​e​ ​s​u​p​p​o​r​t​ ​t​i​c​k​e​t​ ​h​a​s​ ​b​e​e​n​ ​r​e​n​a​m​e​d​ ​f​r​o​m​ ​"​{​o​l​d​T​i​t​l​e​}​"​ ​t​o​ ​"​{​n​e​w​T​i​t​l​e​}​"​.
										 * @param {string} newTitle
										 * @param {string} oldTitle
										 */
										description: RequiredParams<'newTitle' | 'oldTitle'>
									}
									logs: {
										/**
										 * T​h​e​ ​s​u​p​p​o​r​t​ ​t​i​c​k​e​t​ ​a​t​ ​{​t​h​r​e​a​d​}​ ​h​a​s​ ​b​e​e​n​ ​r​e​n​a​m​e​d​ ​f​r​o​m​ ​"​{​o​l​d​T​i​t​l​e​}​"​ ​t​o​ ​"​{​n​e​w​T​i​t​l​e​}​"​.
										 * @param {string} newTitle
										 * @param {string} oldTitle
										 * @param {string} thread
										 */
										description: RequiredParams<'newTitle' | 'oldTitle' | 'thread'>
									}
								}
							}
						}
						lock: {
							builder: {
								/**
								 * L​o​c​k
								 */
								label: string
							}
						}
						close: {
							builder: {
								/**
								 * C​l​o​s​e
								 */
								label: string
							}
						}
						'delete': {
							builder: {
								/**
								 * D​e​l​e​t​e
								 */
								label: string
							}
						}
					}
					ticketCreated: {
						/**
						 * T​i​c​k​e​t​ ​C​r​e​a​t​e​d​!
						 */
						title: string
						user: {
							/**
							 * Y​o​u​r​ ​s​u​p​p​o​r​t​ ​t​i​c​k​e​t​ ​h​a​s​ ​b​e​e​n​ ​c​r​e​a​t​e​d​!​ ​V​i​e​w​ ​i​t​ ​a​t​ ​{​c​h​a​n​n​e​l​}​.
							 * @param {string} channel
							 */
							description: RequiredParams<'channel'>
						}
						logs: {
							/**
							 * {​m​e​m​b​e​r​}​ ​h​a​s​ ​c​r​e​a​t​e​d​ ​a​ ​t​i​c​k​e​t​!​ ​V​i​e​w​ ​i​t​ ​a​t​ ​{​c​h​a​n​n​e​l​}​.
							 * @param {string} channel
							 * @param {string} member
							 */
							description: RequiredParams<'channel' | 'member'>
						}
					}
				}
			}
		}
	}
}

export type TranslationFunctions = {
	commands: {
		help: {
			data: {
				/**
				 * help
				 */
				name: () => LocalizedString
				/**
				 * View all available commands.
				 */
				description: () => LocalizedString
				options: {
					'0': {
						/**
						 * hidden
						 */
						name: () => LocalizedString
						/**
						 * Whether the message should be shown to you or everybody.
						 */
						description: () => LocalizedString
					}
				}
			}
			command: {
				embeds: {
					'0': {
						/**
						 * Command List
						 */
						title: () => LocalizedString
						/**
						 * Here is the list of the available commands: {commands}.
						 */
						description: (arg: { commands: string }) => LocalizedString
						fields: {
							'0': {
								/**
								 * 🔗 Links
								 */
								name: () => LocalizedString
								links: {
									/**
									 * Invite Link
									 */
									invite: () => LocalizedString
									/**
									 * Support Server
									 */
									supportServer: () => LocalizedString
								}
							}
						}
					}
				}
			}
		}
		migrate: {
			data: {
				/**
				 * migrate
				 */
				name: () => LocalizedString
				/**
				 * Deploy any database migrations that may be required.
				 */
				description: () => LocalizedString
			}
			command: {
				/**
				 * Successfully migrated the database!
				 */
				success: () => LocalizedString
			}
		}
		ping: {
			data: {
				/**
				 * ping
				 */
				name: () => LocalizedString
				/**
				 * View the latency and status of the bot.
				 */
				description: () => LocalizedString
			}
			command: {
				embeds: {
					'0': {
						/**
						 * Pinging...
						 */
						title: () => LocalizedString
					}
					'1': {
						/**
						 * Result
						 */
						title: () => LocalizedString
						fields: {
							'0': {
								/**
								 * Ping
								 */
								name: () => LocalizedString
								/**
								 * ⌛ {ms}ms
								 */
								value: (arg: { ms: number }) => LocalizedString
							}
							'1': {
								/**
								 * Latency
								 */
								name: () => LocalizedString
								/**
								 * 🏓 Roughly {ms}ms
								 */
								value: (arg: { ms: number }) => LocalizedString
							}
							'2': {
								/**
								 * WebSocket Status
								 */
								name: () => LocalizedString
								/**
								 * ⚙️ {status}
								 */
								value: (arg: { status: string }) => LocalizedString
							}
						}
					}
				}
			}
		}
		purge: {
			data: {
				/**
				 * purge
				 */
				name: () => LocalizedString
				/**
				 * Remove the latest messages in the current channel by the specified amount.
				 */
				description: () => LocalizedString
				options: {
					'0': {
						/**
						 * amount
						 */
						name: () => LocalizedString
						/**
						 * The amount of messages to delete.
						 */
						description: () => LocalizedString
					}
				}
			}
			command: {
				embeds: {
					'0': {
						/**
						 * Purged Messages
						 */
						title: () => LocalizedString
						/**
						 * Successfully deleted the last {amount} messages!
						 */
						description: (arg: { amount: number }) => LocalizedString
					}
				}
			}
		}
		'rename-title': {
			data: {
				/**
				 * rename-title
				 */
				name: () => LocalizedString
				/**
				 * Rename the title of the thread support ticket.
				 */
				description: () => LocalizedString
			}
		}
		ticket: {
			data: {
				/**
				 * ticket
				 */
				name: () => LocalizedString
				/**
				 * Create a support ticket within a category.
				 */
				description: () => LocalizedString
			}
		}
	}
	events: {
		interactionCreate: {
			ownerOnly: {
				/**
				 * You need to be the owner of the bot to run this command!
				 */
				error: () => LocalizedString
			}
		}
		guildMemberAdd: {
			welcome: {
				/**
				 * Welcome {member}!
				 */
				title: (arg: { member: string }) => LocalizedString
				/**
				 * {member} Thank you for joining the server!
				 */
				message: (arg: { member: string }) => LocalizedString
			}
			farewell: {
				/**
				 * Goodbye {member}!
				 */
				title: (arg: { member: string }) => LocalizedString
				/**
				 * {member} has left the server.
				 */
				message: (arg: { member: string }) => LocalizedString
			}
		}
	}
	tickets: {
		threads: {
			categories: {
				configuration: {
					openingMessage: {
						/**
						 * {category}: New Support Ticket
						 */
						title: (arg: { category: string }) => LocalizedString
						/**
						 * {member} created a new support ticket in the {category} category!
						 */
						description: (arg: { category: string, member: string }) => LocalizedString
					}
				}
				categoryList: {
					/**
					 * Select a category to create a ticket within.
					 */
					placeholder: () => LocalizedString
				}
				createModal: {
					errors: {
						invalidCustomId: {
							/**
							 * An Error Occured
							 */
							title: () => LocalizedString
							/**
							 * The custom ID could not be found.
							 */
							description: () => LocalizedString
						}
					}
					title: {
						/**
						 * Title
						 */
						label: () => LocalizedString
						/**
						 * Write a title to be used in the ticket.
						 */
						placeholder: () => LocalizedString
					}
					description: {
						/**
						 * Description
						 */
						label: () => LocalizedString
						/**
						 * Write a description to be used in the ticket.
						 */
						placeholder: () => LocalizedString
					}
					/**
					 * Ticket Title & Description
					 */
					modalTitle: () => LocalizedString
				}
				createTicket: {
					errors: {
						invalidId: {
							/**
							 * An Error Occured
							 */
							title: () => LocalizedString
							/**
							 * The category ID is not valid.
							 */
							description: () => LocalizedString
						}
						noConfiguration: {
							/**
							 * An Error Occured
							 */
							title: () => LocalizedString
							/**
							 * The global or category configuration could not be found.
							 */
							description: () => LocalizedString
						}
						noManagers: {
							/**
							 * An Error Occured
							 */
							title: () => LocalizedString
							/**
							 * There are no managers to add to the support ticket.
							 */
							description: () => LocalizedString
						}
						invalidChannel: {
							/**
							 * An Error Occured
							 */
							title: () => LocalizedString
							/**
							 * The ticket channel does not exist or is not a text channel.
							 */
							description: () => LocalizedString
						}
						noPermissions: {
							/**
							 * An Error Occured
							 */
							title: () => LocalizedString
							/**
							 * I don't have the required permissions in the channel to create a ticket: {permissions}.
							 */
							description: (arg: { permissions: string }) => LocalizedString
						}
						tooManyTickets: {
							/**
							 * An Error Occured
							 */
							title: () => LocalizedString
							/**
							 * You have too many tickets, you may not have more than {amount}.
							 */
							description: (arg: { amount: number }) => LocalizedString
						}
					}
					buttons: {
						_errorIfNotTicketChannel: {
							/**
							 * An Error Occured
							 */
							title: () => LocalizedString
							/**
							 * The channel is not a valid ticket channel.
							 */
							description: () => LocalizedString
						}
						_errorIfNotTicketAuthorOrManager: {
							/**
							 * An Error Occured
							 */
							title: () => LocalizedString
							/**
							 * You need to be the ticket author or manager to execute this button.
							 */
							description: () => LocalizedString
						}
						renameTitle: {
							builder: {
								/**
								 * Rename Title
								 */
								label: () => LocalizedString
							}
							component: {
								/**
								 * Rename Thread Title
								 */
								modalTitle: () => LocalizedString
							}
							modal: {
								errors: {
									notEditable: {
										/**
										 * An Error Occured
										 */
										title: () => LocalizedString
										/**
										 * I do not have the permission to edit the title.
										 */
										description: () => LocalizedString
									}
								}
								success: {
									/**
									 * Ticket Renamed
									 */
									title: () => LocalizedString
									user: {
										/**
										 * The support ticket has been renamed from "{oldTitle}" to "{newTitle}".
										 */
										description: (arg: { newTitle: string, oldTitle: string }) => LocalizedString
									}
									logs: {
										/**
										 * The support ticket at {thread} has been renamed from "{oldTitle}" to "{newTitle}".
										 */
										description: (arg: { newTitle: string, oldTitle: string, thread: string }) => LocalizedString
									}
								}
							}
						}
						lock: {
							builder: {
								/**
								 * Lock
								 */
								label: () => LocalizedString
							}
						}
						close: {
							builder: {
								/**
								 * Close
								 */
								label: () => LocalizedString
							}
						}
						'delete': {
							builder: {
								/**
								 * Delete
								 */
								label: () => LocalizedString
							}
						}
					}
					ticketCreated: {
						/**
						 * Ticket Created!
						 */
						title: () => LocalizedString
						user: {
							/**
							 * Your support ticket has been created! View it at {channel}.
							 */
							description: (arg: { channel: string }) => LocalizedString
						}
						logs: {
							/**
							 * {member} has created a ticket! View it at {channel}.
							 */
							description: (arg: { channel: string, member: string }) => LocalizedString
						}
					}
				}
			}
		}
	}
}

export type Formatters = {}
